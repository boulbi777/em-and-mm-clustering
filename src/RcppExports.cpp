// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// glm_coefs
Rcpp::NumericVector glm_coefs(Rcpp::NumericVector y1, Rcpp::NumericMatrix X1, Rcpp::NumericVector w1, double epsilon);
RcppExport SEXP _EMandMMPackage_glm_coefs(SEXP y1SEXP, SEXP X1SEXP, SEXP w1SEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type w1(w1SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(glm_coefs(y1, X1, w1, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// singleEM0_C
Rcpp::List singleEM0_C(int K, Rcpp::List params, Rcpp::NumericMatrix x1, double epsilon);
RcppExport SEXP _EMandMMPackage_singleEM0_C(SEXP KSEXP, SEXP paramsSEXP, SEXP x1SEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(singleEM0_C(K, params, x1, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// singleEM_C
Rcpp::List singleEM_C(int K, Rcpp::List params, Rcpp::NumericMatrix x1, double epsilon);
RcppExport SEXP _EMandMMPackage_singleEM_C(SEXP KSEXP, SEXP paramsSEXP, SEXP x1SEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(singleEM_C(K, params, x1, epsilon));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EMandMMPackage_glm_coefs", (DL_FUNC) &_EMandMMPackage_glm_coefs, 4},
    {"_EMandMMPackage_singleEM0_C", (DL_FUNC) &_EMandMMPackage_singleEM0_C, 4},
    {"_EMandMMPackage_singleEM_C", (DL_FUNC) &_EMandMMPackage_singleEM_C, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EMandMMPackage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
